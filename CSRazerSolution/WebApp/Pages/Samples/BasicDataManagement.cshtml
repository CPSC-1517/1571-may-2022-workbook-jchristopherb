@page
@model WebApp.Pages.Samples.BasicDataManagementModel
@{
    //add my tab title for the browser
    ViewData["Title"] = "Basic Data Management";
}

<h1>Basic Data Management</h1>

@*
    <form> arguments:   method  - indicates how data is transfered to server
                        get     - visible on URL in plain text
                        post    - embedded within the form objects sent to the server, not visible
                        action  - directs the server to the page to process form
                                - optional
                                - missing or = "" goes to current page
                                
    Controls:   label, input, button
    
    <label> does not need arguments,
            can have helper tags such as asp-for, asp-validate
            depending on css stysheets, you can get different results
            
    <input> use to accept input from the page user
            has various types of acceptable inputs (type="") parameter
            can tie the control to a property on the ModelPage directly by using the helper tag asp-for="propertyName"

    <textarea>  use to accept input from the page user
                use to accept large amountsof text information generally entered as a set of lines or  one long continuous string
                can set the rows="x" for the vertical height and cols="x" for the horizontal number of characters per line
                requires a paired set of tags (<xxx  ...> </xxx>)
        
    <select>/<option>   use to display a list of choices to the page user from which to select
                        other names:    combobox, dropdownlist, selectlist
                        this control can have an optional "prompt line" which sets as the first line in the list of choices
                        the control requires a paired set of tags <select></select>
                        the choice lines within the control are created using the paired set of tags <option></option>
                        each line in the list is a set of option tags
                        this control can be "hard-coded" with choices
                        this control can be generated dynamically using data collection (List<T>) from a database
                        <option value = "returnDataValue"> displayed text </option>
            
    <button>    three types
                submit: sends the form to the server for processing
                reset:  locally clears the form and does NOT send to server for processing
                button: *obsolete*
*@

<form method ="post">
    <label>
        @* the asp-for will pass the value to the particular variable "Num" from the input control
           add property (asp-for value) to the Model (cshtml.cs)
        *@
        Enter a number <input type="number" asp-for="Num"/>
    </label>
    
    <label>
        this is a textarea for a great deal of text
        <textarea asp-for="MassText" rows="5" cols="100" required></textarea>
    </label>
    
    <label>
        Select a favourite course from the dropdown list
        <select asp-for="FavouriteCourse">
            <option value="0"> --Select-- </option>
            <option value="1008">COMP1008</option>
            <option value="1012">CPSC1012</option>
            <option value="1017">COMP1017</option>
            <option value="1517">CPSC1517</option>
        </select>
    </label>
    
    <button type="submit" id="jsIdentifier" name="RequestObjectIdentifier">
        Press Me (submit form to OnPost)
    </button>

    <button type="submit" id="jsIdentifier" asp-page-handler="SecondButton">
        Press You (submit form to specified OnPostSecondButton)
    </button>
</form>

@Model.Feedback @*This reference the property Feedback*@