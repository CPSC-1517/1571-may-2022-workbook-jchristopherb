@page "{productid?}"
@model WebApp.Pages.Samples.CRUDProductModel
@{
    ViewData["Title"] = "Product Maintenance";
}

@*which libraries do i use for validation on the webpage*@
@section Scripts{
    <partial name = "_ValidationScriptsPartial" />
}

<h1>CRUD: Product instance</h1>

@if(Model.HasFeedback)
{
    <p>@Model.Feedback</p>
}

@if(Model.HasError)
{
    <p style="color:firebrick;">@Model.ErrorMsg</p>
}

<form method="post">
    @*create a control that will hold the product pkey value
      this control should NOT be changable IF your pkey is an IDENTITY
      this control CAN be visible (type="text") or hiddent (type="hidden")
      this is a design consideration
    *@
    <label>
        ID:
        @if(Model.ProductInfo == null)
        {
            <input type="text" asp-for="ProductInfo.ProductID" readonly data-val="false"
              value="0" />
        }
        else
        {
            <input type="text" asp-for="ProductInfo.ProductID" readonly data-val="false" />    
        }
        <span asp-validation-for="ProductInfo.ProductID"></span>
    </label>
    <label>
        Name:
            <input type="text" asp-for="ProductInfo.ProductName" 
             placeholder="product name"/>   
        <span asp-validation-for="ProductInfo.ProductName"></span>
             
    </label>
    <label>
        Supplier:
        Select a supplier:
        <select asp-for="ProductInfo.SupplierID">
            <option value="0">select ....</option>
            @foreach(var sup in Model.SupplierList)
            {
                <option value="@sup.SupplierID"
                    selected=@(Model.ProductInfo != null
                          && sup.SupplierID == Model.ProductInfo.SupplierID)>
                @sup.CompanyName
                </option>
            }
        <span asp-validation-for="ProductInfo.SupplierID"></span>  
        </select>

    </label>
    <label>
        Category:
        Select a category:
        <select asp-for="ProductInfo.CategoryID">
            <option value="0">select ....</option>
            @foreach(var cat in Model.CategoryList)
            {
                <option value="@cat.CategoryID"
                    selected=@(Model.ProductInfo != null
                          && cat.CategoryID == Model.ProductInfo.CategoryID)>
                @cat.CategoryName
                </option>
            }
        <span asp-validation-for="ProductInfo.CategoryID"></span>
        </select>

    </label>
    <label>
        Unit Size:
            <input type="text" asp-for="ProductInfo.QuantityPerUnit" 
             placeholder="unit size" /> 
        <span asp-validation-for="ProductInfo.QuantityPerUnit"></span>      
    </label>
    
    <label>
        Min Order Qty:
            <input type="number" asp-for="ProductInfo.MinimumOrderQuantity" 
             placeholder="minimum order qty" step="1" min="1" />
        <span asp-validation-for="ProductInfo.MinimumOrderQuantity"></span>
             
    </label>
    
    <label>
        Unit Price:
            <input type="number" asp-for="ProductInfo.UnitPrice" 
             placeholder="unit price" step="0.01" min="0.00" /> 
        <span asp-validation-for="ProductInfo.UnitPrice"></span>
             
    </label>
    <label>
        UoO:
            <input type="number" asp-for="ProductInfo.UnitsOnOrder" 
             placeholder="on order" step="1" min="0" /> 
        <span asp-validation-for="ProductInfo.UnitsOnOrder"></span>
             
    </label>
    @*
        for a checkbox, the transfer of data BY DEFAULT us either
              not checked -> null OR checked -> on
        IF you are expecting a boolean (true or false) then use the 
              attribute value="true"
        Why does this work. REMEMBER: when an nstance is created, the properties
            in your instance will be set to: 
               a) system defualts depending on datatype
            or b) constructor assignment
        THEREFORE the default of a boolean poperty is "false"
        BY USING the attribute value="true", IF the control is checked, data WILL be
            transfered to the recieving property (in this case true), IF the control
            is NOT checked, then no data will be transfered to the recieving property
    *@
    <label>
        Discontinued:
            <input type="checkbox" asp-for="ProductInfo.Discontinued" value="true" />
            &nbsp;&nbsp; (discontinued if checked)
        <span asp-validation-for="ProductInfo.Discontinued"></span>
            
    </label>
    <br/><br/>
    @*Manage the buttons, restricting user access*@
    @if(Model.productid.HasValue)
    {
       <button type="submit" asp-page-handler="New" disabled>Save New</button> 
       <button type="submit" asp-page-handler="Update">Update</button> 
       @*add Javascript prompt (pre-code method) for delete confirmation using the 
           onclick event of the button

         this button should be able to be press whether the is valid data or not
           being displayed. You are planning to delete the data from the database.
       *@
       <button type="submit" asp-page-handler="Delete" formnovalidate
        onclick="return confirm('Are you sure you wish to discontinue the product?')"
       >Discontinued</button> 
    }
    else
    {
        <button type="submit" asp-page-handler="New" >Save New</button> 
       <button type="submit" asp-page-handler="Update" disabled>Update</button> 
       @*add Javascript prompt (pre-code method) for delete confirmation using the 
           onclick event of the button

         this button should be able to be press whether the is valid data or not
           being displayed. You are planning to delete the data from the database.
       *@
       <button type="submit" asp-page-handler="Delete" formnovalidate disabled
        onclick="return confirm('Are you sure you wish to discontinue the product?')"
       >Discontinued</button>
    }
    <button type="submit" asp-page-handler="Clear" formnovalidate>Clear</button> 
    <button type="submit" asp-page-handler="Search" formnovalidate>Return to Search</button> 

</form>
